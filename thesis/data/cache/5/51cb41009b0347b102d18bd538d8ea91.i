a:316:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:67:"MASSIM2DEV -  From Simulation to Development of Multi Agent Systems";i:1;i:2;i:2;i:1;}i:2;i:1;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"My name is ";}i:2;i:82;}i:5;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:16:"http://jlopes.pt";i:1;s:11:"João Lopes";}i:2;i:93;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:226:" and I will be updating this wiki throughout this semester (2013/2014 S2) with all information about my MSc thesis. Some pages of this wiki have temporary restricted access to the public. This thesis is being developed in the ";}i:2;i:125;}i:7;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:15:"http://fe.up.pt";i:1;s:52:"Faculty of Engineering of University of Porto (FEUP)";}i:2;i:351;}i:8;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:", at the ";}i:2;i:423;}i:9;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:23:"http://www.liacc.up.pt/";i:1;s:63:"Artificial Intelligence and Computer Science Laboratory (LIACC)";}i:2;i:432;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:". The following is the most up-to-date abstract of my thesis.";}i:2;i:523;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:584;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:584;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"All documentation, including manuscripts are available in the ";}i:2;i:586;}i:14;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:9:"wiki:docs";i:1;s:13:"Documentation";}i:2;i:648;}i:15;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:" page.";}i:2;i:675;}i:16;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:681;}i:17;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:684;}i:18;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"Original Proposal";i:1;i:3;i:2;i:684;}i:2;i:684;}i:19;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:684;}i:20;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:711;}i:21;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:718;}i:22;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:718;}i:23;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:718;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" Supervisor: ";}i:2;i:722;}i:25;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:65:"https://sigarra.up.pt/feup/en/func_geral.formview?p_codigo=405449";i:1;s:22:"Henrique Lopes Cardoso";}i:2;i:735;}i:26;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:827;}i:27;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:827;}i:28;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:827;}i:29;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:827;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" Author (me): ";}i:2;i:831;}i:31;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:75:"https://sigarra.up.pt/feup/pt/fest_geral.cursos_list?pv_num_unico=201006444";i:1;s:17:"João Pedro Lopes";}i:2;i:845;}i:32;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:942;}i:33;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:942;}i:34;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:942;}i:35;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:1;i:1;a:6:{s:11:"table-width";s:4:"100%";s:12:"column-width";s:3:"50%";s:7:"columns";i:2;s:5:"class";s:5:"first";s:8:"block-id";i:1;s:9:"column-id";i:1;}}i:2;i:5;i:3;s:20:"<columns 100% 50% ->";}i:2;i:944;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:944;}i:37;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:966;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:" is a multi-agent development framework, which allows an easy development of distributed multi-agent systems (";}i:2;i:970;}i:39;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:1080;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:") and their deployment through different machines. ";}i:2;i:1083;}i:41;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:1134;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:100:" is particularly taylored for interaction-centered multi-agent systems, including a rich library of ";}i:2;i:1138;}i:43;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"FIPA";}i:2;i:1238;}i:44;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:" interaction protocols. Because of its distributed and asynchronous nature, ";}i:2;i:1242;}i:45;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:1318;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" is not well suited for simulation.";}i:2;i:1322;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1357;}i:48;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1357;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:244:"Repast is a simulation tool for multi-agent systems, where agents are treated simply as Java objects. It has no built-in interaction protocol support. This means that when developing simulations that rely on agent interactions, one has to code ";}i:2;i:1359;}i:50;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"FIPA";}i:2;i:1603;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:134:" interaction protocols from scratch, typically via direct method calls. In a latter stage, when developing a multi-agent system using ";}i:2;i:1607;}i:52;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:1741;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:88:", such efforts are lost, and interaction protocols must be re-implemented making use of ";}i:2;i:1745;}i:54;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:1833;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"'s ";}i:2;i:1837;}i:56;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:1840;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:152:".
This work will aim at developing automatic code-generation approaches to bridge the gap between interaction protocol implementations in Repast and in ";}i:2;i:1843;}i:58;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:1995;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:". ";}i:2;i:1999;}i:60;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2001;}i:61;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:2;i:1;a:3:{s:5:"class";s:4:"last";s:8:"block-id";i:1;s:9:"column-id";i:2;}}i:2;i:5;i:3;s:11:"<newcolumn>";}i:2;i:2001;}i:62;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2001;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:70:" This will allow the programmer to easily migrate from a Repast-based ";}i:2;i:2012;}i:64;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:2082;}i:65;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" simulation experiment to the implementation of a ";}i:2;i:2085;}i:66;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:2135;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"-based distributed ";}i:2;i:2139;}i:68;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:2158;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:", or from an already tentatively developed ";}i:2;i:2161;}i:70;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:2204;}i:71;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:" to a simulation setup for running specific experiments.";}i:2;i:2207;}i:72;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2263;}i:73;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2263;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"The main goals of this proposal are:";}i:2;i:2265;}i:75;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2301;}i:76;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:2301;}i:77;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2301;}i:78;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2301;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"  A set of guidelines for specifying interaction protocols in Repast";}i:2;i:2305;}i:80;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2373;}i:81;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2373;}i:82;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2373;}i:83;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2373;}i:84;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"  A tool for Repast-";}i:2;i:2377;}i:85;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:2397;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and ";}i:2;i:2401;}i:87;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:2406;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:59:"-Repast automatic code generation for interaction protocols";}i:2;i:2410;}i:89;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2469;}i:90;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2469;}i:91;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2469;}i:92;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2469;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:"  Writting of a scientific paper to submit to an international conference or journal";}i:2;i:2473;}i:94;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2557;}i:95;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2557;}i:96;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2557;}i:97;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2557;}i:98;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:"  Interconnection between multi-agent systems development and multi-agent-based simulation";}i:2;i:2561;}i:99;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2651;}i:100;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2651;}i:101;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:2651;}i:102;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:2651;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"  Development of an tool to be made available for the research community ";}i:2;i:2655;}i:104;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:2728;}i:105;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:2728;}i:106;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:2728;}i:107;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:987;i:1;i:2741;}i:2;i:2;i:3;s:0:"";}i:2;i:2730;}i:108;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:1:{i:0;i:4;}i:2;i:5;i:3;s:10:"</columns>";}i:2;i:2730;}i:109;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2742;}i:110;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:8:"Abstract";i:1;i:3;i:2;i:2742;}i:2;i:2742;}i:111;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2742;}i:112;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:2760;}i:113;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:1;i:1;a:6:{s:11:"table-width";s:4:"100%";s:12:"column-width";s:3:"50%";s:7:"columns";i:2;s:5:"class";s:5:"first";s:8:"block-id";i:2;s:9:"column-id";i:1;}}i:2;i:5;i:3;s:20:"<columns 100% 50% ->";}i:2;i:2768;}i:114;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2768;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"Multi-agent systems (";}i:2;i:2789;}i:116;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:2810;}i:117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:256:") present an interesting approach to the efficient development of modular systems. Frameworks exist that aid the development of this class of systems and they range from mostly general-purpose frameworks to domain-specific in an array of different domains.";}i:2;i:2813;}i:118;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3069;}i:119;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3069;}i:120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:"Multi-agent-based simulations (";}i:2;i:3071;}i:121;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MABS";}i:2;i:3102;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:") are sometimes used on the course of development of a full-featured ";}i:2;i:3106;}i:123;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:3175;}i:124;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3178;}i:125;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:3179;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:" for instance, for testing purposes ";}i:2;i:3181;}i:127;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:3217;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:" for the potential gains in performance when simulating ";}i:2;i:3219;}i:129;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:3275;}i:130;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:". 
However, most platforms for ";}i:2;i:3278;}i:131;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:3309;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" development are not well suited for ";}i:2;i:3312;}i:133;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MABS";}i:2;i:3349;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:128:" development due to scalability limitations. Furthermore, an opportunity exists to partially automate the development of robust ";}i:2;i:3353;}i:135;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:3481;}i:136;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:37:" from a previously tested simulation.";}i:2;i:3484;}i:137;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3521;}i:138;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3521;}i:139;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:3523;}i:140;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:", a very popular ";}i:2;i:3527;}i:141;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:3544;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:99:" development framework allows the creation of seamless distributed agent systems and complies with ";}i:2;i:3547;}i:143;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"FIPA";}i:2;i:3646;}i:144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:303:" standards for agent interaction. Unfortunately, its multi-threaded architecture falls short in delivering the necessary performance to run a local simulation with a large number of agents. Repast \cite{collier2003repast} is an agent-based simulation toolkit that allows creating simulations using rich ";}i:2;i:3650;}i:145;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"GUI";}i:2;i:3953;}i:146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:" elements and real time agent statistics. It can easily handle large numbers of agents in a single simulation. Unlike ";}i:2;i:3956;}i:147;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:4074;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:", though, Repast lacks much of the infrastructure for agent creation and interaction.";}i:2;i:4078;}i:149;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4163;}i:150;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4163;}i:151;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"Some works propose, as a solution for bridging the gap between ";}i:2;i:4165;}i:152;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:4228;}i:153;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:" development and simulation, an integration of ";}i:2;i:4231;}i:154;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:4278;}i:155;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:151:" and simulation features by extending this framework with a simulation layer created from scratch, or by integrating another framework, such as Repast.";}i:2;i:4282;}i:156;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4433;}i:157;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:2;i:1;a:3:{s:5:"class";s:4:"last";s:8:"block-id";i:2;s:9:"column-id";i:2;}}i:2;i:5;i:3;s:11:"<newcolumn>";}i:2;i:4433;}i:158;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4433;}i:159;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:"This thesis proposes an integrated solution which combines an ";}i:2;i:4446;}i:160;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:4508;}i:161;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" that enables the creation of ";}i:2;i:4511;}i:162;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:4541;}i:163;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:"-like simulations using a framework like Repast with a code conversion tool, that automatically converts that simulation into an equivalent ";}i:2;i:4545;}i:164;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:4685;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4689;}i:166;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:4690;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:". That ";}i:2;i:4693;}i:168;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:4700;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:" does so by reimplementing from scratch many ";}i:2;i:4703;}i:170;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:4748;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" features, including its implementation of ";}i:2;i:4752;}i:172;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"FIPA";}i:2;i:4795;}i:173;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" specifications for agent interaction and management. Since the ";}i:2;i:4799;}i:174;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:4863;}i:175;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"'s architecture is very close to ";}i:2;i:4866;}i:176;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:4899;}i:177;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:44:"'s, conversion becomes more straightforward.";}i:2;i:4903;}i:178;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4947;}i:179;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4947;}i:180;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:"The main user for such a system would be ";}i:2;i:4949;}i:181;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:4990;}i:182;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:71:" developers who need to create a simulation of their already-developed ";}i:2;i:4994;}i:183;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:5065;}i:184;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:". By converting their code, the developer can perform tests and simulation and later convert the simulation back to a ";}i:2;i:5068;}i:185;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:5186;}i:186;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:", preserving all changes. ";}i:2;i:5189;}i:187;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:5215;}i:188;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:" developers can also create simulations from scratch using frameworks like Repast using familiar ";}i:2;i:5219;}i:189;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:5316;}i:190;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:"-like features. Finally, this system can be interesting for Repast developers who desire to expand their knowledge of ";}i:2;i:5320;}i:191;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:5438;}i:192;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:42:" development with more complex frameworks.";}i:2;i:5441;}i:193;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5483;}i:194;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5483;}i:195;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:77:"Validation tests demonstrate that the behaviour of the currently implemented ";}i:2;i:5485;}i:196;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:5562;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" features in the ";}i:2;i:5566;}i:198;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:5583;}i:199;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:" display the same behaviour as the analogous ";}i:2;i:5586;}i:200;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:5631;}i:201;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" ones. Furthermore, using the ";}i:2;i:5635;}i:202;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:5665;}i:203;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:" it is possible to achieve very significant performance gains.";}i:2;i:5668;}i:204;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5731;}i:205;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:987;i:1;i:5742;}i:2;i:2;i:3;s:0:"";}i:2;i:5731;}i:206;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:1:{i:0;i:4;}i:2;i:5;i:3;s:10:"</columns>";}i:2;i:5731;}i:207;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:5743;}i:208;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:6:"Resumo";i:1;i:3;i:2;i:5743;}i:2;i:5743;}i:209;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:5743;}i:210;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:5759;}i:211;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:1;i:1;a:6:{s:11:"table-width";s:4:"100%";s:12:"column-width";s:3:"50%";s:7:"columns";i:2;s:5:"class";s:5:"first";s:8:"block-id";i:3;s:9:"column-id";i:1;}}i:2;i:5;i:3;s:20:"<columns 100% 50% ->";}i:2;i:5766;}i:212;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5766;}i:213;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:26:"Os sistemas multi-agente (";}i:2;i:5787;}i:214;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:5813;}i:215;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:", Multi-Agent Systems) exprimem uma abordagem interessante no desenvolvimento de sistemas modulares e eficientes. Os ";}i:2;i:5816;}i:216;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:5933;}i:217;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:" são compostos por elementos computacionais autónomos ";}i:2;i:5936;}i:218;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:5992;}i:219;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:389:" chamados agentes - que são programados para competir ou colaborar de modo a, por exemplo, resolver problemas computacionais, iniciar negociação automática ou participar em jogos de computador. Existem ferramentas de software que facilitam o desenvolvimento desta classe de sistemas que podem variar entre ferramentas de âmbito geral até ferramentas focadas num domínio específico.";}i:2;i:5994;}i:220;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6383;}i:221;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6383;}i:222;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:36:"As simulações baseadas em agente (";}i:2;i:6385;}i:223;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MABS";}i:2;i:6421;}i:224;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:" Multi-Agent-Based Simulations) são frequentemente utilizadas durante o desenvolvimento de ";}i:2;i:6425;}i:225;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:6517;}i:226;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" completos ";}i:2;i:6520;}i:227;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:6531;}i:228;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:39:" por exemplo, afim de testar o sistema ";}i:2;i:6533;}i:229;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:"--";}i:2;i:6572;}i:230;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:" para beneficiar do seu desempenho mais elevado. No entanto, a maior parte das plataformas para desenvolvimento de ";}i:2;i:6574;}i:231;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:6689;}i:232;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:43:" não são apropriadas para a criação de ";}i:2;i:6692;}i:233;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"MABS";}i:2;i:6735;}i:234;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6739;}i:235;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6739;}i:236;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"O ";}i:2;i:6742;}i:237;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:6744;}i:238;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:55:" é um exemplo de uma plataforma de desenvolvimento de ";}i:2;i:6748;}i:239;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:6803;}i:240;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:117:" que permite a criação de sistemas de agents distribuídos de forma simplificada cumprindo, ainda, os standards da ";}i:2;i:6806;}i:241;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"FIPA";}i:2;i:6923;}i:242;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:560:" (Foundation for Intelligent Physical Agents) sobre protocolos de interação entre agentes. No entanto, a sua arquitetura em multi-thread não garante a performance necessária para a execução de simulações com um elevado número de agentes. O Repast é uma plataforma de criação de simulações baseadas em agentes que permite criar simulações ricas em interfaces gráficas para visualização de dados históricos e em tempo real sobre os agentes. Consegue facilmente lidar com um grande número de agentes numa única simulação. Ao contrário do ";}i:2;i:6927;}i:243;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:7487;}i:244;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:", o Repast não dispõe de uma infraestrutura para criação de agentes e interação entre eles.";}i:2;i:7491;}i:245;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7589;}i:246;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:2:{i:0;i:2;i:1;a:3:{s:5:"class";s:4:"last";s:8:"block-id";i:3;s:9:"column-id";i:2;}}i:2;i:5;i:3;s:11:"<newcolumn>";}i:2;i:7589;}i:247;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7589;}i:248;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"Alguns trabalhos estudados  propõem uma integração com o ";}i:2;i:7601;}i:249;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:7661;}i:250;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:45:" de ferramentas de simulação, extendendo o ";}i:2;i:7665;}i:251;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:7710;}i:252;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" com ferramentas criadas de raiz ou integrado-o com outras frameworks, como o Repast.";}i:2;i:7714;}i:253;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7799;}i:254;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7799;}i:255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:"Esta dissertação propõe uma solução integrada que combina uma ";}i:2;i:7801;}i:256;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:7868;}i:257;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:53:" que permite a criação de simulações baseadas no ";}i:2;i:7871;}i:258;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:7924;}i:259;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:169:" utilizando como base uma framework como o Repast, juntamente com uma ferramenta de conversão de código que converte automaticamente uma simulação numa applicação ";}i:2;i:7928;}i:260;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:8097;}i:261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:". Esta ";}i:2;i:8101;}i:262;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:8108;}i:263;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" foi criada reimplementando de raiz várias características do ";}i:2;i:8111;}i:264;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:8175;}i:265;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:", includindo a sua implementação das especificações ";}i:2;i:8179;}i:266;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"FIPA";}i:2;i:8235;}i:267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:" para a interação entre agentes e sua gestão. Como a arquitectura da ";}i:2;i:8239;}i:268;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:8311;}i:269;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" é muito próxima da do ";}i:2;i:8314;}i:270;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:8339;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:47:", a conversão de código torna-se mais direta.";}i:2;i:8343;}i:272;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8390;}i:273;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8390;}i:274;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:61:"Os principais utilizadores esperados serão programadores de ";}i:2;i:8392;}i:275;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:8453;}i:276;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:29:" que necessitem de simular o ";}i:2;i:8457;}i:277;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:8486;}i:278;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:191:" que desenvolveram. Convertendo o seu código, o programador pode realizar testes e simulações, fazer as alterações desejadas à simulação e re-converter o código para uma aplicação ";}i:2;i:8489;}i:279;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:8680;}i:280;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:56:", preservando as alterações feitas. Um programador de ";}i:2;i:8684;}i:281;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:8740;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:" pode também criar simulações de raiz utilizando frameworks como o Repast utilizando componentes baseados em ";}i:2;i:8744;}i:283;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:8856;}i:284;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:164:" que já lhe são familiares. Por outro lado, um programador de Repast verá interesse neste sitema se desejar expandir o seu conhecimento sobre desenvolvimento de ";}i:2;i:8860;}i:285;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"MAS";}i:2;i:9024;}i:286;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:38:" utilizando frameworks mais complexas.";}i:2;i:9027;}i:287;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9065;}i:288;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9065;}i:289;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:93:"Testes de validação desmonstraram que o comportamento dos componentes já implementados na ";}i:2;i:9067;}i:290;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:9160;}i:291;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:" mostram um comportamento identico aos componentes análogos no ";}i:2;i:9163;}i:292;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:4:"JADE";}i:2;i:9227;}i:293;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:28:". Além disso, utilizando a ";}i:2;i:9231;}i:294;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:9259;}i:295;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:67:" foi possível obter ganhos significativos a nível de performance.";}i:2;i:9262;}i:296;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9330;}i:297;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:7:"columns";i:1;a:1:{i:0;i:4;}i:2;i:5;i:3;s:10:"</columns>";}i:2;i:9330;}i:298;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9330;}i:299;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:9342;}i:300;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"Further reading";}i:2;i:9344;}i:301;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:9359;}i:302;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:9361;}i:303;a:3:{i:0;s:4:"nest";i:1;a:1:{i:0;a:3:{i:0;a:3:{i:0;s:13:"footnote_open";i:1;a:0:{}i:2;i:9363;}i:1;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:131:"Jacques Ferber. Multi-agent systems: an introduction to distributed artificial intelligence, volume 1. Addison-Wesley Reading, 1999";}i:2;i:9365;}i:2;a:3:{i:0;s:14:"footnote_close";i:1;a:0:{}i:2;i:9496;}}}i:2;i:9363;}i:304;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:9498;}i:305;a:3:{i:0;s:4:"nest";i:1;a:1:{i:0;a:3:{i:0;a:3:{i:0;s:13:"footnote_open";i:1;a:0:{}i:2;i:9500;}i:1;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:"Michael Wooldridge. An introduction to multiagent systems. Wiley. com, 2008.";}i:2;i:9502;}i:2;a:3:{i:0;s:14:"footnote_close";i:1;a:0:{}i:2;i:9578;}}}i:2;i:9500;}i:306;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:9580;}i:307;a:3:{i:0;s:4:"nest";i:1;a:1:{i:0;a:5:{i:0;a:3:{i:0;s:13:"footnote_open";i:1;a:0:{}i:2;i:9581;}i:1;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:"The Eclipse Foundation. Eclipse java development tools (jdt). Available at ";}i:2;i:9583;}i:2;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:27:"http://www.eclipse.org/jdt/";i:1;N;}i:2;i:9658;}i:3;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:", last access on February 2014.";}i:2;i:9685;}i:4;a:3:{i:0;s:14:"footnote_close";i:1;a:0:{}i:2;i:9716;}}}i:2;i:9581;}i:308;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:9718;}i:309;a:3:{i:0;s:4:"nest";i:1;a:1:{i:0;a:3:{i:0;a:3:{i:0;s:13:"footnote_open";i:1;a:0:{}i:2;i:9719;}i:1;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:328:"Jana Gormer, Gianina Homoceanu, Christopher Mumme, Michaela Huhn, and Jorg P Muller. Jrep: Extending repast simphony for jade agent behavior components. In Proceedings of the 2011 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology-Volume 02, pages 149–154. IEEE Computer Society, 2011.";}i:2;i:9721;}i:2;a:3:{i:0;s:14:"footnote_close";i:1;a:0:{}i:2;i:10049;}}}i:2;i:9719;}i:310;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10051;}i:311;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10054;}i:312;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:10:"References";i:1;i:3;i:2;i:10054;}i:2;i:10054;}i:313;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:10054;}i:314;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:10075;}i:315;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:10075;}}