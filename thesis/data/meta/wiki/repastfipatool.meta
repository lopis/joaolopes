a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1393428740;s:8:"modified";i:1394732855;}s:7:"creator";s:5:"João";s:4:"user";s:6:"jlopes";s:11:"last_change";a:7:{s:4:"date";i:1394732855;s:2:"ip";s:14:"193.136.33.221";s:4:"type";s:1:"E";s:2:"id";s:19:"wiki:repastfipatool";s:4:"user";s:6:"jlopes";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:6:"jlopes";s:5:"João";}s:5:"title";s:21:"FIPA tools for Repast";s:11:"description";a:2:{s:15:"tableofcontents";a:2:{i:0;a:4:{s:3:"hid";s:21:"fipa_tools_for_repast";s:5:"title";s:21:"FIPA tools for Repast";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:1;a:4:{s:3:"hid";s:19:"repacl_architecture";s:5:"title";s:19:"RepACL Architecture";s:4:"type";s:2:"ul";s:5:"level";i:3;}}s:8:"abstract";s:503:"FIPA tools for Repast

I will use this page to document the implementation of FIPA protocols in Repast, which I will call RepACL for now. Some issues I've been thinking about:

	*  Should a directory facilitator be created? Or just use direct agent references - since agents in Repast are POJO? The DF would probably only introduce more complexity to the simulation. Besides, many Repast applications use spaces that contain the agents. If a DF is needed, it should be up to the programmer.
	*  Repas…";}s:8:"relation";a:2:{s:5:"media";a:1:{s:23:"wiki:repacl_arch_v5.png";b:1;}s:10:"firstimage";s:23:"wiki:repacl_arch_v5.png";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1393428740;s:8:"modified";i:1394732855;}s:7:"creator";s:5:"João";s:4:"user";s:6:"jlopes";s:11:"last_change";a:7:{s:4:"date";i:1394732855;s:2:"ip";s:14:"193.136.33.221";s:4:"type";s:1:"E";s:2:"id";s:19:"wiki:repastfipatool";s:4:"user";s:6:"jlopes";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:6:"jlopes";s:5:"João";}}}